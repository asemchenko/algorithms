Grammar

    0 $accept: input $end

    1 input: expr

    2 expr: expr TOK_MINUS expr
    3     | expr TOK_PLUS expr
    4     | expr TOK_STAR expr
    5     | expr TOK_SLASH expr
    6     | TOK_OPEN_BRACKET expr TOK_CLOSE_BRACKET
    7     | NUMBER


Terminals, with rules where they appear

$end (0) 0
error (256)
TOK_MINUS (258) 2
TOK_PLUS (259) 3
TOK_STAR (260) 4
TOK_SLASH (261) 5
NUMBER (262) 7
TOK_OPEN_BRACKET (263) 6
TOK_CLOSE_BRACKET (264) 6


Nonterminals, with rules where they appear

$accept (10)
    on left: 0
input (11)
    on left: 1, on right: 0
expr (12)
    on left: 2 3 4 5 6 7, on right: 1 2 3 4 5 6


State 0

    0 $accept: . input $end

    NUMBER            shift, and go to state 1
    TOK_OPEN_BRACKET  shift, and go to state 2

    input  go to state 3
    expr   go to state 4


State 1

    7 expr: NUMBER .

    $default  reduce using rule 7 (expr)


State 2

    6 expr: TOK_OPEN_BRACKET . expr TOK_CLOSE_BRACKET

    NUMBER            shift, and go to state 1
    TOK_OPEN_BRACKET  shift, and go to state 2

    expr  go to state 5


State 3

    0 $accept: input . $end

    $end  shift, and go to state 6


State 4

    1 input: expr .
    2 expr: expr . TOK_MINUS expr
    3     | expr . TOK_PLUS expr
    4     | expr . TOK_STAR expr
    5     | expr . TOK_SLASH expr

    TOK_MINUS  shift, and go to state 7
    TOK_PLUS   shift, and go to state 8
    TOK_STAR   shift, and go to state 9
    TOK_SLASH  shift, and go to state 10

    $default  reduce using rule 1 (input)


State 5

    2 expr: expr . TOK_MINUS expr
    3     | expr . TOK_PLUS expr
    4     | expr . TOK_STAR expr
    5     | expr . TOK_SLASH expr
    6     | TOK_OPEN_BRACKET expr . TOK_CLOSE_BRACKET

    TOK_MINUS          shift, and go to state 7
    TOK_PLUS           shift, and go to state 8
    TOK_STAR           shift, and go to state 9
    TOK_SLASH          shift, and go to state 10
    TOK_CLOSE_BRACKET  shift, and go to state 11


State 6

    0 $accept: input $end .

    $default  accept


State 7

    2 expr: expr TOK_MINUS . expr

    NUMBER            shift, and go to state 1
    TOK_OPEN_BRACKET  shift, and go to state 2

    expr  go to state 12


State 8

    3 expr: expr TOK_PLUS . expr

    NUMBER            shift, and go to state 1
    TOK_OPEN_BRACKET  shift, and go to state 2

    expr  go to state 13


State 9

    4 expr: expr TOK_STAR . expr

    NUMBER            shift, and go to state 1
    TOK_OPEN_BRACKET  shift, and go to state 2

    expr  go to state 14


State 10

    5 expr: expr TOK_SLASH . expr

    NUMBER            shift, and go to state 1
    TOK_OPEN_BRACKET  shift, and go to state 2

    expr  go to state 15


State 11

    6 expr: TOK_OPEN_BRACKET expr TOK_CLOSE_BRACKET .

    $default  reduce using rule 6 (expr)


State 12

    2 expr: expr . TOK_MINUS expr
    2     | expr TOK_MINUS expr .
    3     | expr . TOK_PLUS expr
    4     | expr . TOK_STAR expr
    5     | expr . TOK_SLASH expr

    TOK_STAR   shift, and go to state 9
    TOK_SLASH  shift, and go to state 10

    $default  reduce using rule 2 (expr)


State 13

    2 expr: expr . TOK_MINUS expr
    3     | expr . TOK_PLUS expr
    3     | expr TOK_PLUS expr .
    4     | expr . TOK_STAR expr
    5     | expr . TOK_SLASH expr

    TOK_STAR   shift, and go to state 9
    TOK_SLASH  shift, and go to state 10

    $default  reduce using rule 3 (expr)


State 14

    2 expr: expr . TOK_MINUS expr
    3     | expr . TOK_PLUS expr
    4     | expr . TOK_STAR expr
    4     | expr TOK_STAR expr .
    5     | expr . TOK_SLASH expr

    $default  reduce using rule 4 (expr)


State 15

    2 expr: expr . TOK_MINUS expr
    3     | expr . TOK_PLUS expr
    4     | expr . TOK_STAR expr
    5     | expr . TOK_SLASH expr
    5     | expr TOK_SLASH expr .

    $default  reduce using rule 5 (expr)
